from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# Revision identifiers, used by Alembic
revision = '001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic ###
    op.create_table(
        'users',
        sa.Column('id', sa.BigInteger(), primary_key=True, autoincrement=True, nullable=False),
        sa.Column('email', sa.String(length=255), nullable=False, unique=True),
        sa.Column('username', sa.String(length=50), nullable=False, unique=True),
        sa.Column('password_hash', sa.String(length=255), nullable=False),
        sa.Column('first_name', sa.String(length=100), nullable=False),
        sa.Column('last_name', sa.String(length=100), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.func.now()),
        sa.Column('updated_at', sa.DateTime(), nullable=False, server_default=sa.func.now(), onupdate=sa.func.now()),
        sa.Column('is_active', sa.Boolean(), nullable=False, server_default='True'),
        sa.Column('is_superuser', sa.Boolean(), nullable=False, server_default='False'),
        sa.Column('last_login', sa.DateTime(), nullable=True),
        sa.Column('failed_login_attempts', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('phone_number', sa.String(length=20), nullable=True, unique=True),
        sa.Column('address', sa.String(length=255), nullable=True),
        sa.Column('city', sa.String(length=100), nullable=True),
        sa.Column('country', sa.String(length=100), nullable=True),
        sa.Column('postal_code', sa.String(length=20), nullable=True),
        sa.Column('role', sa.String(length=50), nullable=False, server_default='user'),
        sa.Column('two_factor_enabled', sa.Boolean(), nullable=False, server_default='False'),
        sa.Column('two_factor_secret', sa.String(length=255), nullable=True),
        sa.Column('email_verified', sa.Boolean(), nullable=False, server_default='False'),
        sa.Column('email_verification_token', sa.String(length=255), nullable=True),
        sa.Column('email_verification_sent_at', sa.DateTime(), nullable=True),
        sa.Column('reset_password_token', sa.String(length=255), nullable=True),
        sa.Column('reset_password_sent_at', sa.DateTime(), nullable=True),
        sa.Column('oauth_provider', sa.String(length=50), nullable=True),
        sa.Column('oauth_id', sa.String(length=255), nullable=True, unique=True),
        sa.Column('profile_picture', sa.String(length=255), nullable=True),
        sa.Column('bio', sa.Text(), nullable=True),
        sa.Column('date_of_birth', sa.Date(), nullable=True),
        sa.Column('gender', sa.Enum('male', 'female', 'non_binary', 'other', name='gender_enum'), nullable=True),
        sa.Column('newsletter_opt_in', sa.Boolean(), nullable=False, server_default='False'),
        sa.Column('terms_accepted', sa.Boolean(), nullable=False, server_default='False'),
        sa.Column('referral_code', sa.String(length=50), nullable=True, unique=True),
        sa.Column('referred_by', sa.String(length=50), nullable=True),
        sa.Column('loyalty_points', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('language_preference', sa.String(length=10), nullable=False, server_default='en'),
        sa.Column('currency_preference', sa.String(length=10), nullable=False, server_default='USD'),
        sa.Column('account_locked', sa.Boolean(), nullable=False, server_default='False'),
        sa.Column('lock_reason', sa.String(length=255), nullable=True),
        sa.Column('signup_ip_address', sa.String(length=45), nullable=True),
        sa.Column('signup_device_info', sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('username'),
        sa.UniqueConstraint('phone_number'),
        sa.UniqueConstraint('oauth_id'),
        sa.UniqueConstraint('referral_code')
    )
    
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_index(op.f('ix_users_phone_number'), 'users', ['phone_number'], unique=True)
    op.create_index(op.f('ix_users_oauth_id'), 'users', ['oauth_id'], unique=True)
    op.create_index(op.f('ix_users_referral_code'), 'users', ['referral_code'], unique=True)
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_phone_number'), table_name='users')
    op.drop_index(op.f('ix_users_oauth_id'), table_name='users')
    op.drop_index(op.f('ix_users_referral_code'), table_name='users')

    op.drop_table('users')

    # Drop ENUM type if it was used
    sa.Enum('male', 'female', 'non_binary', 'other', name='gender_enum').drop(op.get_bind())