name: Continuous Integration Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        working-directory: ./frontend

      - name: Lint frontend code
        run: npm run lint
        working-directory: ./frontend

      - name: Run frontend tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless
        working-directory: ./frontend

      - name: Build frontend
        run: npm run build -- --prod
        working-directory: ./frontend

  backend-tests:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: stripe_clone
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r backend/requirements.txt

      - name: Run backend unit tests
        run: |
          source venv/bin/activate
          pytest backend/tests/unit_tests

      - name: Lint backend code
        run: |
          source venv/bin/activate
          flake8 backend/

  backend-java-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      - name: Install Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run Java tests
        run: ./gradlew test
        working-directory: ./backend

  go-services-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'

      - name: Run Go tests
        run: go test ./...
        working-directory: ./payment_processing/transaction_management

  # Job to upload test artifacts
  artifacts-upload:
    runs-on: ubuntu-latest
    needs: [frontend-build, backend-tests, backend-java-tests, go-services-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: |
            frontend/test-results
            backend/test-results
            backend/build/test-results
            payment_processing/test-results

  # Notify on completion
  notify:
    runs-on: ubuntu-latest
    needs: [frontend-build, backend-tests, backend-java-tests, go-services-tests]

    steps:
      - name: Notify via Slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          text: CI pipeline completed. All jobs finished.