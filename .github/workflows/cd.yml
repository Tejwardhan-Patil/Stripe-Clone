name: Continuous Deployment

on:
  push:
    branches:
      - main
      - release/*
  workflow_dispatch:

jobs:
  deploy_backend:
    name: Deploy Backend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/src/requirements.txt

    - name: Run backend tests
      run: |
        pytest backend/src/tests

    - name: Deploy backend
      run: |
        # Command to deploy the backend (using Docker or Kubernetes)
        bash scripts/deploy.sh backend

  deploy_frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: deploy_backend

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install frontend dependencies
      run: |
        npm install --prefix frontend

    - name: Run frontend tests
      run: |
        npm run test --prefix frontend

    - name: Build frontend
      run: |
        npm run build --prefix frontend

    - name: Deploy frontend
      run: |
        # Command to deploy the frontend (using Docker or Kubernetes)
        bash scripts/deploy.sh frontend

  deploy_infrastructure:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    needs: [deploy_backend, deploy_frontend]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Initialize Terraform
      run: terraform init

    - name: Apply Terraform
      run: terraform apply -auto-approve

  notify:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: [deploy_backend, deploy_frontend, deploy_infrastructure]

    steps:
    - name: Send Notification
      run: |
        # Notify team or log deployment
        echo "Deployment successful" 
        # curl -X POST -H "Content-Type: application/json" -d '{"message": "Deployment Successful"}' https://website.com/notify